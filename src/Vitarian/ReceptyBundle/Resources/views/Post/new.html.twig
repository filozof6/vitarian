{% extends 'VitarianReceptyBundle::layout.html.twig' %}

{% block body -%}
<h1>Post creation</h1>    
<div class="label label-danger">{{ form_errors(form) }}</div>
    {{ form_start(form, { 'attr': {"role":"form", "class":"form-horizontal"}}) }}
    {# render the task's only field: description #}
    <div class="form-group">
        {{ form_label(form.title) }}        
        {{ form_widget(form.title, { 'attr': {"class":"form-control"}}) }}
    </div>
    <div class="form-group">
        {{ form_label(form.body) }}        
        {{ form_widget(form.body, { 'attr': {"class":"form-control"}}) }}
    </div>
    <div class="form-group">
        {{ form_row(form.photo) }}
    </div>
    <div class="form-group">
        {{ form_label(form.category) }}        
        {{ form_widget(form.category, { 'attr': {"class":"selectpicker"}}) }}
    </div>

<h3>Ingredients</h3>
<ul class="tags" data-prototype="{{ _self.ingredients_prototype(form.ingredients.vars.prototype)|e }}" style="list-style: none; ">
        {# iterate over each existing tag and render its only field: name #}
        {% for postIngredients in form.ingredients %}
    <li>

{{ form_row(postIngredients.ingredient) }}
    
    </li>
        {% endfor %}
</ul>
{{ form_widget(form.submit, { 'attr': {"class":"btn btn-default"}}) }}
{{ form_end(form) }}

<ul class="record_actions">
    <li>
        <a href="{{ path('post') }}">
            Back to the list
        </a>
    </li>
</ul>
{% endblock %}
    {% block javascripts -%}
    {{ parent() }}
<script>

    function addTagForm($collectionHolder, $newLinkLi) {
// Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');


// get the new index
        var index = $collectionHolder.data('index');

// Replace '__name__' in the prototype's HTML to
// instead be a number based on how many items we have
        var newForm = prototype.replace(/__name__/g, index);

// increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

// Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi = $('<li></li>').append(newForm);

        $newLinkLi.before($newFormLi);
        addTagFormDeleteLink($newFormLi);
    }
    function addTagFormDeleteLink($tagFormLi) {
        var $removeFormA = $('<a href="#">delete this ingredient</a><hr/>');
        $tagFormLi.append($removeFormA);

        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $tagFormLi.remove();
        });
    }
    var $collectionHolder;

// setup an "add a tag" link
    var $addTagLink = $('<a href="#" class="add_tag_link">Add an ingredient</a>');
    var $newLinkLi = $('<li></li>').append($addTagLink);

    jQuery(document).ready(function() {
// Get the ul that holds the collection of tags
        $collectionHolder = $('ul.tags');
// Get the ul that holds the collection of tags
        $collectionHolder = $('ul.tags');
// add a delete link to all of the existing tag form li elements
        $collectionHolder.find('li').each(function() {
            addTagFormDeleteLink($(this));
        });
// count the current form inputs we have (e.g. 2), use that as the new
// index when inserting a new item (e.g. 2)
        $collectionHolder.data('index', $collectionHolder.find(':input').length);

        $addTagLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addTagForm($collectionHolder, $newLinkLi);
        });
// add the "add a tag" anchor and li to the tags ul
        $collectionHolder.append($newLinkLi);
    });
</script>
    {% endblock %}
{% macro ingredients_prototype(var) %}
    <div class="form-group">
        {{ form_label(var.ingredient) }}        
        {{ form_widget(var.ingredient, { 'attr': {"class":"selectpicker"}}) }}
    </div>
    <div class="form-group">
        {{ form_label(var.amount) }}        
        {{ form_widget(var.amount, { 'attr': {"class":"form-control"}}) }}
    </div>

{% endmacro %}